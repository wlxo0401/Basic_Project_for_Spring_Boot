package kr.inhatc.spring.friend2.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import kr.inhatc.spring.board.dto.BoardDto;
import kr.inhatc.spring.board.service.BoardService;
import kr.inhatc.spring.friend.entity.Friends;
import kr.inhatc.spring.friend.service.FriendService;

@Controller
public class FriendController {
	private Logger log = LoggerFactory.getLogger(this.getClass());

	@Autowired
	private FriendService friendService;

	
	@Autowired
	private PasswordEncoder encoder;
	
	
	// GET = 읽기(read), POST = 생성(create), PUT = 업데이트(update), DELETE = 삭제(delete) . 레스트 풀 서비스
	@RequestMapping(value = "/friend2/friendList", method = RequestMethod.GET)
	public String friendList(Model model) {
		List<Friends> list = friendService.friendList();
		System.out.println("================================> 크기 : " + list.size());
		System.out.println(list.get(0));
		model.addAttribute("list", list);
		return "friend2/friendList"; 
	}
	
	@RequestMapping(value = "/friend2/friendInsert", method = RequestMethod.GET)
	public String friendWrite(Model model) {
		return "friend2/friendWrite"; 
	}
	
	@RequestMapping(value = "/friend2/friendInsert", method = RequestMethod.POST)
	public String friendInsert(Friends friend) {
		friendService.saveFriends(friend);
		
		return "redirect:/friend2/friendList";
	}
	
	@RequestMapping(value = "/friend2/friendDetail/{id}", method = RequestMethod.GET)
	public String friendDetail(@PathVariable("id") String id, Model model) {
		Friends friend = friendService.friendDetail(id);	
		model.addAttribute("friend", friend);
		System.out.println("==================> : " + friend);
		return "friend2/friendDetail";
	}
	
	@RequestMapping(value = "/friend2/friendUpdate/{id}", method = RequestMethod.POST)
	public String friendUpdate(@PathVariable("id") String id, Friends friend) {
		friend.setId(id);
		friendService.saveFriends(friend);
		return "redirect:/friend2/friendList";
	}
	
	
	@RequestMapping(value = "/friend2/friendDelete/{id}", method = RequestMethod.GET)
	public String friendDelete(@PathVariable("id") String id) {
		friendService.friendDelete(id);
		return "redirect:/friend2/friendList";
	}
}
