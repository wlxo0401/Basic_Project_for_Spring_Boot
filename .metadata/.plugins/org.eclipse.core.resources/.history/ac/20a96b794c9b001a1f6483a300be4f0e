package kr.inhatc.spring.member.controller;

import java.io.File;
import java.io.IOException;
import java.net.URLEncoder;
import java.util.List;

import javax.servlet.http.HttpServletResponse;

import org.apache.commons.io.FileUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.util.ObjectUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.ModelAndView;

import kr.inhatc.spring.member.dto.MemberDto;
import kr.inhatc.spring.member.service.MemberService;

@Controller
public class MemberController {

	
	//로그 출력 설정
	private Logger log = LoggerFactory.getLogger(this.getClass());

	
	// 멤버 서비스 가져오기
	// 메모리에 자동으로 등록
	@Autowired
	private MemberService memberService;

	@RequestMapping("/member/memberList")
	public String boardList(Model model) {
		List<MemberDto> list = memberService.memberList();
		log.debug("=============== >>>> " + list.size());
		System.out.println("=============== >>>> " + list.size());
		model.addAttribute("list", list);
		// 아래 주소를 찾아간다.
		return "member/memberList";
	}
//	
//	@RequestMapping("/member/memberWrite")
//	public String boardWrite() {
//		return "member/memberWrite";
//	}

//
//	@RequestMapping("/board/boardInsert")
//	public String boardInsert(BoardDto board, MultipartHttpServletRequest multipartHttpServletRequest) {
//		boardService.boardInsert(board, multipartHttpServletRequest);
//		return "redirect:/board/boardList";
//	}
//
	@RequestMapping("/member/memberDetail")
	public String memberDetail(@RequestParam int memberId, Model model) {
		MemberDto member = memberService.memberDetail(memberId);
		model.addAttribute("member", member);
		return "member/memberDetail";
	}
//
//	@RequestMapping("/board/boardUpdate")
//	public String boardUpdate(BoardDto board) {
//		boardService.boardUpdate(board);
//		return "redirect:/board/boardList";
//	}
//
//	@RequestMapping("/board/boardDelete")
//	public String boardDelete(@RequestParam("boardIdx") int id) {
//		boardService.boardDelete(id);
//		return "redirect:/board/boardList";
//	}
//
//	@RequestMapping("/board/downloadBoardFile")
//	public void downloadBoardFile(@RequestParam("idx") int idx, @RequestParam("boardIdx") int boardIdx,
//			HttpServletResponse response) throws Exception {
//		System.out.println("===============>" + idx);
//		System.out.println("===============>" + boardIdx);
//
//		FileDto boardFile = boardService.selectFileInfo(idx, boardIdx);
//
//		if (ObjectUtils.isEmpty(boardFile) == false) {
//			String fileName = boardFile.getOriginalFileName();
//			byte[] files = FileUtils.readFileToByteArray(new File(boardFile.getStoredFilePath()));
//			
//			response.setContentType("application/octet-stream");
//			response.setContentLength(files.length);
//			response.setHeader("Content-Disposition",
//					"attachment; filename=\"" + URLEncoder.encode(fileName, "UTF-8") + "\";");
//			response.setHeader("Content-Transfer-Encoding", "binary");
//			
//			response.getOutputStream().write(files);
//			response.getOutputStream().flush();
//			response.getOutputStream().close();
//		}
//
//	}
	
}
