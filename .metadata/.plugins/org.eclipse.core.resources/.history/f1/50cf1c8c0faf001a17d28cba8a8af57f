## DdataBase 설정 (hikari CP란?)
#spring.datasource.hikari.driver-class-name = oracle.jdbc.OracleDriver
#spring.datasource.hikari.jdbc-url = jdbc:oracle:thin:@127.0.0.1:1521:xe
#spring.datasource.hikari.username = kimjitae
#spring.datasource.hikari.password = 1234
#spring.datasource.hikari.validation-timeout = 10000
#spring.datasource.hikari.connection-timeout = 10000
#spring.datasource.hikari.connection-test-query = SELECT 1 FROM DUAL


################
# DdataBase 설정 (log 출력)
################
spring.datasource.hikari.driver-class-name = net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.hikari.jdbc-url = jdbc:log4jdbc:oracle:thin:@127.0.0.1:1521:xe
spring.datasource.hikari.username = kimjitae
spring.datasource.hikari.password = 1234
spring.datasource.hikari.validation-timeout = 10000
spring.datasource.hikari.connection-timeout = 10000
spring.datasource.hikari.connection-test-query = SELECT 1 FROM DUAL



################
# 포트 설정 
################
server.port = 18080

################
# 카멜 표기법 - AB_CG 스네이크 표기법 맵핑 설정
################
mybatis.configuration.map-underscore-to-camel-case=true

spring.thymeleaf.cache=false
spring.resources.cache.period=0
################
# JPA 설정
# 어느정도 테이블이 안정되면 update로 바꾼다.
################

spring.jpa.hibernate.ddl-auto=create
#spring.jpa.hibernate.ddl-auto=update


#쿼리와 관련된 내용들을 포맷을 잡아서 보여줄 것이냐, 커맨트를 보여줄 것이냐, 즉 옵션
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true


##사용할 DB 선택 - 오라클 선택
spring.jpa.database=oracle
spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

## JPA 엔티티 연관관계를 바탕으로 테이블 생성과 같은 스크립트를 자동으로 실행
spring.jpa.generate-ddl=false
spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.show_sql=true

## SQL 로그 설명
logging.level.org.hibernate.type.descriptor.sql=trace


## 하이버네이트의 새로운 ID 생성 옵션의 사용 여부 설정
spring.jpa.hibernate.use-new-id-generator-mappings=false

## 보안 로그 레벨 설정
logging.level.org.springframework.security = debug





